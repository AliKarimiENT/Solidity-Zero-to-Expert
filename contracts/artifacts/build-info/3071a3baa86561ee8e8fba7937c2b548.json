{
	"id": "3071a3baa86561ee8e8fba7937c2b548",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/variables-and-types.sol": {
				"content": "pragma solidity >=0.7.0 < 0.9.0;\r\n\r\n// store data to variables\r\n// three main types of variables : Boolean , Integers and String\r\n\r\ncontract LearnVariables{\r\n    uint chocolateBar = 10;\r\n    uint storeOwner = 300;\r\n    bool lieDetector = true;\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/variables-and-types.sol": {
				"LearnVariables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/variables-and-types.sol\":132:252  contract LearnVariables{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/variables-and-types.sol\":182:184  10 */\n  0x0a\n    /* \"contracts/variables-and-types.sol\":162:184  uint chocolateBar = 10 */\n  0x00\n  sstore\n    /* \"contracts/variables-and-types.sol\":209:212  300 */\n  0x012c\n    /* \"contracts/variables-and-types.sol\":191:212  uint storeOwner = 300 */\n  0x01\n  sstore\n    /* \"contracts/variables-and-types.sol\":238:242  true */\n  0x01\n    /* \"contracts/variables-and-types.sol\":219:242  bool lieDetector = true */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/variables-and-types.sol\":132:252  contract LearnVariables{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/variables-and-types.sol\":132:252  contract LearnVariables{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122094850aae784fe0334a7540538d6931e43031f603d848e676d851fe674779da0164736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600a60005561012c6001556001600260006101000a81548160ff021916908315150217905550348015603557600080fd5b50603f8060436000396000f3fe6080604052600080fdfea264697066735822122094850aae784fe0334a7540538d6931e43031f603d848e676d851fe674779da0164736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x0 SSTORE PUSH2 0x12C PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x43 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP6 EXP 0xAE PUSH25 0x4FE0334A7540538D6931E43031F603D848E676D851FE674779 0xDA ADD PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "132:120:0:-:0;;;182:2;162:22;;209:3;191:21;;238:4;219:23;;;;;;;;;;;;;;;;;;;;132:120;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122094850aae784fe0334a7540538d6931e43031f603d848e676d851fe674779da0164736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP6 EXP 0xAE PUSH25 0x4FE0334A7540538D6931E43031F603D848E676D851FE674779 0xDA ADD PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "132:120:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "68545",
								"totalCost": "81145"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 182,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 162,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 209,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "12C"
								},
								{
									"begin": 191,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 212,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 238,
									"end": 242,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 242,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 219,
									"end": 242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 242,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 219,
									"end": 242,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 219,
									"end": 242,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 219,
									"end": 242,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 252,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 252,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 252,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 132,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 252,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094850aae784fe0334a7540538d6931e43031f603d848e676d851fe674779da0164736f6c63430008100033",
									".code": [
										{
											"begin": 132,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 132,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 252,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/variables-and-types.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/variables-and-types.sol\":\"LearnVariables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/variables-and-types.sol\":{\"keccak256\":\"0x09d80c8ab53ed72ec068c6452849e06e7ee3fd1c46116a3f2d7f9e12ef406d97\",\"urls\":[\"bzz-raw://402e90137e49b44b4e6e6ea0db4a1c9b9b7d82afad99299c99da12c00a20908e\",\"dweb:/ipfs/QmZAxbaufRp5BGd7ARs1uZ7DMnoDLYiXhdiC8cigeWEstK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/variables-and-types.sol:LearnVariables",
								"label": "chocolateBar",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/variables-and-types.sol:LearnVariables",
								"label": "storeOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 10,
								"contract": "contracts/variables-and-types.sol:LearnVariables",
								"label": "lieDetector",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/variables-and-types.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/variables-and-types.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/variables-and-types.sol": {
				"ast": {
					"absolutePath": "contracts/variables-and-types.sol",
					"exportedSymbols": {
						"LearnVariables": [
							11
						]
					},
					"id": 12,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LearnVariables",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "LearnVariables",
							"nameLocation": "141:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "chocolateBar",
									"nameLocation": "167:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "162:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "162:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "182:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "storeOwner",
									"nameLocation": "196:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "191:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "191:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "209:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "lieDetector",
									"nameLocation": "224:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "219:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "219:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "238:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "internal"
								}
							],
							"scope": 12,
							"src": "132:120:0",
							"usedErrors": []
						}
					],
					"src": "0:252:0"
				},
				"id": 0
			}
		}
	}
}