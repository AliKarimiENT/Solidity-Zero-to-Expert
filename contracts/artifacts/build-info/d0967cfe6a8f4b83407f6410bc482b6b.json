{
	"id": "d0967cfe6a8f4b83407f6410bc482b6b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/variables-and-types.sol": {
				"content": "pragma solidity >=0.7.0 < 0.9.0;\r\n\r\n// store data to variables\r\n// three main types of variables : Boolean , Integers and String\r\n\r\ncontract Variables{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/variables-and-types.sol": {
				"Variables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/variables-and-types.sol\":132:160  contract Variables{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/variables-and-types.sol\":132:160  contract Variables{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e878c545d54e17d774bc792f365311946fffb84c5bb0566a313e757747f60ff264736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e878c545d54e17d774bc792f365311946fffb84c5bb0566a313e757747f60ff264736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 PUSH25 0xC545D54E17D774BC792F365311946FFFB84C5BB0566A313E75 PUSH24 0x47F60FF264736F6C63430008100033000000000000000000 ",
							"sourceMap": "132:28:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e878c545d54e17d774bc792f365311946fffb84c5bb0566a313e757747f60ff264736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 PUSH25 0xC545D54E17D774BC792F365311946FFFB84C5BB0566A313E75 PUSH24 0x47F60FF264736F6C63430008100033000000000000000000 ",
							"sourceMap": "132:28:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 160,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 160,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 160,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 160,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 160,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 132,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 160,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e878c545d54e17d774bc792f365311946fffb84c5bb0566a313e757747f60ff264736f6c63430008100033",
									".code": [
										{
											"begin": 132,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 132,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 160,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/variables-and-types.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/variables-and-types.sol\":\"Variables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/variables-and-types.sol\":{\"keccak256\":\"0x9a8cd50736bf975cf5beb3e8cb9f95587338a6f7a84a1c1640aaeeadff6a6b56\",\"urls\":[\"bzz-raw://914c9bba7c63cde9f18249f896a8f16c5a787998b04da4ae2dcaa5cf41398e9d\",\"dweb:/ipfs/QmdMqkxHCdoZFkmEAAvirDyH1HgvdofdcD2rYymTpn9gqY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/variables-and-types.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/variables-and-types.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/variables-and-types.sol": {
				"ast": {
					"absolutePath": "contracts/variables-and-types.sol",
					"exportedSymbols": {
						"Variables": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Variables",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Variables",
							"nameLocation": "141:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "132:28:0",
							"usedErrors": []
						}
					],
					"src": "0:160:0"
				},
				"id": 0
			}
		}
	}
}