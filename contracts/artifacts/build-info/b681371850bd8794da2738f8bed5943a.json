{
	"id": "b681371850bd8794da2738f8bed5943a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/variables-and-types.sol": {
				"content": "pragma solidity >=0.7.0 < 0.9.0;\r\n\r\n// store data to variables\r\n// three main types of variables : Boolean , Integers and String\r\n\r\ncontract LearnVariables{\r\n    \r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/variables-and-types.sol": {
				"LearnVariables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/variables-and-types.sol\":132:167  contract LearnVariables{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/variables-and-types.sol\":132:167  contract LearnVariables{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220295b4a170501e5a569b41ed561f7a55b4676a1a82168c50ca28029b6eaec78e664736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220295b4a170501e5a569b41ed561f7a55b4676a1a82168c50ca28029b6eaec78e664736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 JUMPDEST 0x4A OR SDIV ADD 0xE5 0xA5 PUSH10 0xB41ED561F7A55B4676A1 0xA8 0x21 PUSH9 0xC50CA28029B6EAEC78 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "132:35:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220295b4a170501e5a569b41ed561f7a55b4676a1a82168c50ca28029b6eaec78e664736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 JUMPDEST 0x4A OR SDIV ADD 0xE5 0xA5 PUSH10 0xB41ED561F7A55B4676A1 0xA8 0x21 PUSH9 0xC50CA28029B6EAEC78 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "132:35:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 167,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 167,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 167,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 132,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 167,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220295b4a170501e5a569b41ed561f7a55b4676a1a82168c50ca28029b6eaec78e664736f6c63430008100033",
									".code": [
										{
											"begin": 132,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 132,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 167,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/variables-and-types.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/variables-and-types.sol\":\"LearnVariables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/variables-and-types.sol\":{\"keccak256\":\"0x629b04e7950e2628df4d727aa7381d7ea568a72933d98ce7d5dc3a92d2e81e38\",\"urls\":[\"bzz-raw://ae3661879108a7e4856b586c98eb502e44778dc41be6cb03ee8b29b1b5f7274b\",\"dweb:/ipfs/QmcsrSB6qbKX5Wp5mDagsMvgN1UyfDL5zNLCsLNyQwjDAP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/variables-and-types.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/variables-and-types.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/variables-and-types.sol": {
				"ast": {
					"absolutePath": "contracts/variables-and-types.sol",
					"exportedSymbols": {
						"LearnVariables": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LearnVariables",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "LearnVariables",
							"nameLocation": "141:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "132:35:0",
							"usedErrors": []
						}
					],
					"src": "0:167:0"
				},
				"id": 0
			}
		}
	}
}